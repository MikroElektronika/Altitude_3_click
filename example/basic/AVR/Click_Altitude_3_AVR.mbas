'
'Example for Altitude_3 Click
'
'    Date          : Dec 2018.
'    Author        : Nemanja Medakovic
'
'Test configuration AVR :
'    
'    MCU              : ATMEGA32
'    Dev. Board       : EasyAVR v7 
'    AVR Compiler ver : v7.0.1.0
'
'---
'
'Description :
'
'The application is composed of three sections :
'
'- System Initialization - Initializes peripherals and pins.
'- Application Initialization - Initializes I2C interface and performs a SW Reset of the device.
'- Application Task - (code snippet) - Selects the desired measurement mode and data reading order, and after that 
'  calculates the temperature, pressure and altitude data to standard units and shows results to uart terminal.
'
'Additional Functions :
'
'- logUnit - Shows Celsius degrees symbol to uart terminal.
'
'
program Click_Altitude_3_AVR

include Click_Altitude_3_types
include Click_Altitude_3_config
dim
    _temperature as int8_t 
    _pressure as uint16_t 
    _altitude as int16_t 
    response as T_ALTITUDE3_RETVAL 
    text as char[30] 
    
sub procedure logUnit() 
    text[0] = " " 
    text[1] = 176 
    text[2] = "C" 
    text[3] = 0 
    mikrobus_logWrite(text, _LOG_LINE) 
end sub

sub procedure systemInit() 
    mikrobus_i2cInit(_MIKROBUS1, @_ALTITUDE3_I2C_CFG[0]) 
    mikrobus_logInit(_LOG_USBUART, 9600) 
    mikrobus_logWrite("*** Initializing... ***", _LOG_LINE) 
    Delay_ms(100) 
end sub

sub procedure applicationInit() 
    altitude3_i2cDriverInit(T_ALTITUDE3_P(@_MIKROBUS1_GPIO), T_ALTITUDE3_P(@_MIKROBUS1_I2C), _ALTITUDE3_SLAVE_ADDR) 
    Delay_ms(500) 
    altitude3_softReset() 
    Delay_ms(500) 
    mikrobus_logWrite("** Altitude 3 click is initialized **", _LOG_LINE) 
    mikrobus_logWrite("", _LOG_LINE) 
end sub

sub procedure applicationTask() 
    response = altitude3_measurementMode(_ALTITUDE3_NORMAL_T_FIRST) 
    response = altitude3_getData(response, @_temperature, @_pressure, @_altitude) 
    if (response = _ALTITUDE3_OK) then 
        ShortToStr(_temperature, text) 
        mikrobus_logWrite("Temperature is : ", _LOG_TEXT) 
        mikrobus_logWrite(text, _LOG_TEXT) 
        logUnit() 
        WordToStr(_pressure, text) 
        mikrobus_logWrite("Pressure is : ", _LOG_TEXT) 
        mikrobus_logWrite(text, _LOG_TEXT) 
        mikrobus_logWrite(" mbar[hPa]", _LOG_LINE) 
        IntToStr(_altitude, text) 
        mikrobus_logWrite("Altitude is : ", _LOG_TEXT) 
        mikrobus_logWrite(text, _LOG_TEXT) 
        mikrobus_logWrite(" m", _LOG_LINE) 
        mikrobus_logWrite("", _LOG_LINE) 
        Delay_ms(400) 
    end if
end sub

main :

    systemInit() 
    applicationInit() 
    while (1) 
        applicationTask() 
    wend
end.